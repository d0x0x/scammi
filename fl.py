import logging
from aiogram import *
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

bot = Bot(token="1873178780:AAF5HzgUyoDxMMEhY-26o7HNoEoD7Fnc8ZI", parse_mode=types.ParseMode.HTML)
keyboard = types.InlineKeyboardMarkup()
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["Hackingüîí", "Profileüíº"]
    buttons2 = ["–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"]
    keyboard.add(*buttons)
    keyboard.add(*buttons2)
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—é –Ω–∏–∂–µüçÉ", reply_markup=keyboard)


############################################################################

btn = InlineKeyboardButton("VKONTAKTE", callback_data="cb")
btn2 = InlineKeyboardButton("INSTAGRAM", callback_data="cb2")
btn3 = InlineKeyboardButton("TELEGRAM", callback_data="cb3")
btn4 = InlineKeyboardButton("–°–ê–ô–¢ –ï–ì–≠", callback_data="cb4")
btn5 = InlineKeyboardButton("TikTok", callback_data="cb5")
btn6 = InlineKeyboardButton("Facebook", callback_data="cb6")

btn_keyboard = InlineKeyboardMarkup(row_width=6).row(btn, btn2, btn3, btn4, btn5, btn6)

btn_keyboard = InlineKeyboardMarkup().add(btn, btn2, btn3, btn4, btn5, btn6)

@dp.message_handler()
async def any_text_message(message: types.Message):
    if message.text == 'Hackingüîí':
        await bot.send_message(message.from_user.id, '''–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤–∑–ª–æ–º–∞—Ç—å:''', parse_mode='Markdown', reply_markup=btn_keyboard)

    if message.text == 'Profileüíº':
            await bot.send_message(message.from_user.id, f'''
            	‚öóÔ∏èID : {message.from_user.id}
üíä–ë–∞–ª–∞–Ω—Å : 0''', parse_mode='Markdown')

    if message.text == '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É':
    	await bot.send_message(message.from_user.id, f'''
‚ùì–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?
‚úÖ–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É —Å—É–º–º—É 150 —Ä—É–±–ª–µ–π : 4890 4947 4095 9424
‚ôªÔ∏è–ö –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—é –ø–ª–∞—Ç–µ–∂–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ü–∏—Ñ—Ä—ã {message.from_user.id}
‚ö†Ô∏è–í—Å–µ –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–≤–æ–¥—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é —Ä–æ–±–æ—Ç–∞!''', parse_mode='Markdown')
        
@dp.callback_query_handler(lambda c: c.data == "cb")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

@dp.callback_query_handler(lambda c: c.data == "cb2")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

@dp.callback_query_handler(lambda c: c.data == "cb3")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

@dp.callback_query_handler(lambda c: c.data == "cb4")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

@dp.callback_query_handler(lambda c: c.data == "cb5")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

@dp.callback_query_handler(lambda c: c.data == "cb6")
async def test_function(query: types.CallbackQuery):
    await bot.answer_callback_query(query.id, "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)

##########################################################################################

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)